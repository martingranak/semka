<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sk.pds.semestralka.mapper.PersonMapper">
    <resultMap id="PersonResultMap" type="sk.pds.semestralka.model.Person">
        <id column="identity_number" property="identityNumber"/>
        <result column="first_name" property="firstName"/>
        <result column="last_name" property="lastName"/>
        <result column="birthday" property="birthday"/>
    </resultMap>

    <resultMap id="PersonCourseResultMap" type="sk.pds.semestralka.model.PersonCourse">
        <id column="person_course_id" property="personCourseId" />
        <result column="date_from" property="dateFrom" />
        <result column="date_to" property="dateTo" />
        <association property="person" javaType="sk.pds.semestralka.model.Person">
            <id column="identity_number" property="identityNumber"/>
            <result column="first_name" property="firstName"/>
            <result column="last_name" property="lastName"/>
            <result column="birthday" property="birthday"/>
        </association>
        <association property="course" javaType="sk.pds.semestralka.model.Course">
            <id column="course_id" property="courseId"/>
            <result column="course_name" property="courseName"/>
            <result column="course_type" property="courseType"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="PersonResultMap">
        SELECT identity_number, first_name, last_name, birthday FROM person
    </select>

    <select id="findById" resultMap="PersonResultMap" parameterType="java.lang.String">
        SELECT identity_number, first_name, last_name, birthday FROM person WHERE UPPER(identity_number) = UPPER(#{identityNumber})
    </select>

    <select id="findByName" resultMap="PersonResultMap" parameterType="java.lang.String">
        SELECT identity_number, first_name, last_name, birthday FROM person WHERE UPPER(first_name || ' ' || last_name) = UPPER(#{name})
    </select>

    <select id="findByFirstName" resultMap="PersonResultMap" parameterType="java.lang.String">
        SELECT identity_number, first_name, last_name, birthday FROM person WHERE UPPER(first_name) = UPPER(#{firstName})
    </select>

    <select id="findByLastName" resultMap="PersonResultMap" parameterType="java.lang.String">
        SELECT identity_number, first_name, last_name, birthday FROM person WHERE UPPER(last_name) = UPPER(#{lastName})
    </select>

    <select id="findAllDrivers" resultMap="PersonResultMap">
      SELECT
        p.identity_number identity_number,
        p.first_name first_name,
        p.last_name last_name,
        p.birthday birthday
      FROM
        person p
      WHERE
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 1 AND pc2.date_to >= current_date)
          AND
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 6 AND pc2.date_to >= current_date)
      ORDER BY p.identity_number
    </select>

    <select id="findAllDriversPageById" resultMap="PersonResultMap">
        SELECT
        p.identity_number identity_number,
        p.first_name first_name,
        p.last_name last_name,
        p.birthday birthday
      FROM
        person p
      WHERE
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 1 AND pc2.date_to >= current_date)
          AND
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 6 AND pc2.date_to >= current_date)
      ORDER BY p.identity_number
      LIMIT
        #{limit}
      OFFSET
        #{offset}
    </select>

    <select id="findAllDriversPageByName" resultMap="PersonResultMap">
        SELECT
        p.identity_number identity_number,
        p.first_name first_name,
        p.last_name last_name,
        p.birthday birthday
      FROM
        person p
      WHERE
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 1 AND pc2.date_to >= current_date)
          AND
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 6 AND pc2.date_to >= current_date)
      ORDER BY p.last_name || p.first_name, p.identity_number
      LIMIT
        #{limit}
      OFFSET
        #{offset}
    </select>

    <select id="findAllDriversPageByBirthdate" resultMap="PersonResultMap">
      SELECT
        p.identity_number identity_number,
        p.first_name first_name,
        p.last_name last_name,
        p.birthday birthday
      FROM
        person p
      WHERE
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 1 AND pc2.date_to >= current_date)
          AND
        p.identity_number IN (SELECT pc2.identity_number FROM person_course pc2 WHERE pc2.course_id = 6 AND pc2.date_to >= current_date)
      ORDER BY p.birthday, p.identity_number
      LIMIT
        #{limit}
      OFFSET
        #{offset}
    </select>

    <insert id="insertPerson" parameterType="sk.pds.semestralka.model.Person">
        INSERT INTO person (first_name, last_name, birthday)
        VALUES (#{person.first_name}, #{person.last_name}, #{person.birthday})
    </insert>

    <insert id="insertCourseToPerson" parameterType="sk.pds.semestralka.model.PersonCourse">
        INSERT INTO person_course (identity_number, course_id, date_from, date_to)
        VALUES (#{personCourse.person.identityNumber}, #{personCourse.course.courseId}, #{personCourse.dateFrom}, #{personCourse.dateTo});
    </insert>

    <update id="updatePerson" parameterType="sk.pds.semestralka.model.Person">
        UPDATE
          person
        SET
          (first_name, last_name, birthday) = (#{person.first_name}, #{person.last_name}, #{person.birthday})
        WHERE
          UPPER(identity_number) = UPPER(#{identityNumber})
    </update>

    <delete id="deletePerson" parameterType="java.lang.Long">
        DELETE FROM person WHERE UPPER(identity_number) = UPPER(#{identityNumber})
    </delete>
</mapper>